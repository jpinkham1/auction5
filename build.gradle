plugins {
    id("groovy") 
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.3"
    id("io.micronaut.test-resources") version "3.6.3"
}

version = "0.1"
group = "com.togetherauction"

repositories {
    mavenCentral()
}

// from micronaut.io/launch see micronaut-cli.yml for list of features
// heavily copied from example app: guides.micronaut.io/latest/micronaut-oauth2-oidc-google-gradle-groovy
dependencies {
    compileOnly("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.email:micronaut-email-sendgrid")
    implementation("io.micronaut.email:micronaut-email-template")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    implementation("io.micronaut.multitenancy:micronaut-multitenancy")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security-oauth2")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.views:micronaut-views-thymeleaf")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("org.apache.logging.log4j:log4j-core:2.19.0")
    compileOnly("io.micronaut:micronaut-http-validation")
    compileOnly("io.micronaut.security:micronaut-security-annotations")
    runtimeOnly("org.apache.logging.log4j:log4j-api:2.19.0")
    runtimeOnly('org.apache.logging.log4j:log4j-slf4j-impl:2.19.0')
    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
    implementation("io.micronaut:micronaut-validation")
    testRuntimeOnly("com.h2database:h2")
}


application {
    mainClass.set("com.togetherauction.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.togetherauction.*")
    }
}



